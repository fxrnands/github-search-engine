{"ast":null,"code":"var _jsxFileName = \"/Users/Fernands/Documents/github-repo-search/src/components/UserRepository.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { getUserRepositories } from '../api/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserRepositories(_ref) {\n  _s();\n  let {\n    username\n  } = _ref;\n  const [repositories, setRepositories] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchRepositories = async () => {\n      try {\n        const response = await getUserRepositories(username);\n        setRepositories(response.data);\n      } catch (error) {\n        setError('An error occurred while retrieving repositories.');\n      }\n    };\n    fetchRepositories();\n  }, [username]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: repositories.map(repo => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: repo.name\n      }, repo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(UserRepositories, \"h4ohJFFdhKy7AlL5QYhoJLE0EJw=\");\n_c = UserRepositories;\nexport default UserRp;\nvar _c;\n$RefreshReg$(_c, \"UserRepositories\");","map":{"version":3,"names":["useState","useEffect","getUserRepositories","jsxDEV","_jsxDEV","UserRepositories","_ref","_s","username","repositories","setRepositories","error","setError","fetchRepositories","response","data","children","fileName","_jsxFileName","lineNumber","columnNumber","map","repo","name","id","_c","UserRp","$RefreshReg$"],"sources":["/Users/Fernands/Documents/github-repo-search/src/components/UserRepository.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { getUserRepositories } from '../api/api';\n\nfunction UserRepositories({ username }) {\n  const [repositories, setRepositories] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchRepositories = async () => {\n      try {\n        const response = await getUserRepositories(username);\n        setRepositories(response.data);\n      } catch (error) {\n        setError('An error occurred while retrieving repositories.');\n      }\n    };\n    fetchRepositories();\n  }, [username]);\n\n  return (\n    <div>\n      {error && <p>{error}</p>}\n\n      <ul>\n        {repositories.map(repo => (\n          <li key={repo.id}>{repo.name}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default UserRp"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,mBAAmB,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,gBAAgBA,CAAAC,IAAA,EAAe;EAAAC,EAAA;EAAA,IAAd;IAAEC;EAAS,CAAC,GAAAF,IAAA;EACpC,MAAM,CAACG,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMY,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMZ,mBAAmB,CAACM,QAAQ,CAAC;QACpDE,eAAe,CAACI,QAAQ,CAACC,IAAI,CAAC;MAChC,CAAC,CAAC,OAAOJ,KAAK,EAAE;QACdC,QAAQ,CAAC,kDAAkD,CAAC;MAC9D;IACF,CAAC;IACDC,iBAAiB,EAAE;EACrB,CAAC,EAAE,CAACL,QAAQ,CAAC,CAAC;EAEd,oBACEJ,OAAA;IAAAY,QAAA,GACGL,KAAK,iBAAIP,OAAA;MAAAY,QAAA,EAAIL;IAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAExBhB,OAAA;MAAAY,QAAA,EACGP,YAAY,CAACY,GAAG,CAACC,IAAI,iBACpBlB,OAAA;QAAAY,QAAA,EAAmBM,IAAI,CAACC;MAAI,GAAnBD,IAAI,CAACE,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACjB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACD;AAEV;AAACb,EAAA,CA3BQF,gBAAgB;AAAAoB,EAAA,GAAhBpB,gBAAgB;AA6BzB,eAAeqB,MAAM;AAAA,IAAAD,EAAA;AAAAE,YAAA,CAAAF,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}